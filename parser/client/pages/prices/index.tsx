import Head from 'next/head'
import React, { useState } from 'react'
import MainLayout from '../../components/layouts/Main'
import { useGetSettingsByIdQuery } from '../../services/settingsService'
import { ISetting } from '../../types/api'

interface IState {
    price: string;
    result: string | null;
}

export default function Index() {
    const { data } = useGetSettingsByIdQuery({ settingId: process.env.NEXT_PUBLIC_BOT_ID as string })

    const [state, setState] = useState<IState>({
        price: "",
        result: null
    })

    const onRateChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const input = e.target.value.replace(/[^0-9.]/g, "");
        const parts = input.split(".");
        let newValue = input;

        if (parts.length === 2) {
            const [integer, decimal] = parts;
            if (decimal.length > 2) {
                newValue = `${integer}.${decimal.slice(0, 2)}`;
            }
        }

        setState(prev => ({ ...prev, [e.target.name]: newValue }));
        setState(prev => {
            try {
                const result = getPrice(Number(prev.price), data?.data)

                return { ...prev, result: result.toFixed(2) }
            } catch (e) {
                return { ...prev, result: null }
            }
        });
    };

    const getPrice = (price: number, setting: ISetting | undefined) => {
        if (setting === undefined) {
            throw new Error("Настройки не переданны")
        }

        let result = price

        if (result <= 135) {
            result = eval(setting.upTo135.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 200) {
            result = eval(setting.upTo200.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 266) {
            result = eval(setting.upTo266.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 333) {
            result = eval(setting.upTo333.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 400) {
            result = eval(setting.upTo400.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 466) {
            result = eval(setting.upTo466.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 533) {
            result = eval(setting.upTo533.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 600) {
            result = eval(setting.upTo600.replaceAll("x", result.toString())) * Number(setting.rate)
        } else if (result <= 666) {
            result = eval(setting.upTo666.replaceAll("x", result.toString())) * Number(setting.rate)
        } else {
            result = eval(setting.over666.replaceAll("x", result.toString())) * Number(setting.rate)
        }

        result = Math.ceil(result / 1000) * 1000

        return result
    }

    return (
        <MainLayout>
            <Head>
                <title>Цены</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="px-6 my-4 max-w-3xl mx-auto">
                <div className="text-xl font-medium mb-4">Цены</div>
                <div className="flex flex-col mb-1">
                    <label className="text-sm mb-2">Введите цену в долларах</label>
                    <input type="string" className="bg-white rounded-md border-gray-300 shadow-sm text-sm px-3 py-2 border-[1px]" name="price" value={state.price} onChange={onRateChange} />
                </div>
                <div className="text-sm text-gray-400">Все расчеты производятся в соответствии с указанными настройками, а так же курсом доллара</div>
                {state.result !== null &&
                    <div className="mt-4">
                        <div className="font-bold text-xl mb-4">Результат</div>
                        <div className="text-sm text-gray-400"><span className="font-medium text-2xl text-black">{state.result}₽</span></div>
                    </div>
                }
            </div>
        </MainLayout>
    )
}
